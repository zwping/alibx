plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.github.dcendents.android-maven'
}

android {
    compileSdk 30

    defaultConfig {
        minSdk 21
        targetSdk 30
        versionCode 52
        versionName "0.5.2"
        consumerProguardFiles 'consumer-rules.pro'
    }
    android.libraryVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${rootProject.name}-${android.defaultConfig.versionName}.aar"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    api 'androidx.core:core-ktx:1.6.0'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.3.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'androidx.fragment:fragment-ktx:1.3.6'

    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    api "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-alpha01"

    // OkHttp https://github.com/square/okhttp
    api 'com.squareup.okhttp3:okhttp:4.9.1'
    // glide
    api 'com.github.bumptech.glide:glide:4.12.0'
}

//---------------------------------------------

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
